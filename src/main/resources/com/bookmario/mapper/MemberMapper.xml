<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookmario.mapper.MemberMapper">

	<resultMap type="com.bookmario.domain.MemberVO" id="memberMap">
		<id property="userID" column="userid"/>
		<result property="userPass" column="userpass"/>
		<result property="username" column="username"/>
		<result property="phon" column="phon"/>
    	<result property="email" column="email"/>
    	<result property="address" column="address"/>
		<result property="regDate" column="regdate"/>
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>
	
	<resultMap type="com.bookmario.domain.AuthVO" id="authMap">
		<result property="userID" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<select id="read" resultMap="memberMap">
	Select
		mem.userID, mem.userPass, mem.username, mem.phon, mem.email, mem.address, mem.regDate, auth.auth
	FROM
		member mem LEFT OUTER JOIN member_auth auth on mem.userID = auth.userID
	WHERE
		mem.userID = #{userID}	
	</select>
	
	<!-- 회원 가입 -->
	<insert id="signup">
		insert into member(userID, userPass, username, Phon, email, address)
			values(#{userID}, #{userPass}, #{username}, #{Phon}, #{email}, #{address})
	</insert>
	
	<!-- 회원 가입 권한 -->
	<insert id="auth">
		insert into member_auth(userID, auth)
			values(#{userID}, #{auth})
	</insert>
	
	<!-- 장바구니 -->
	<select id="hasCart">
		select exists(select 1 from carts where status = #{status} and userid = #{currUserId})
	</select>
	
	<select id="getCart">
		select * from carts where userID = #{userID} and status = 0
	</select>
	
	<select id="getOrders">
		select * from carts where userID = #{userID} and status > 0
	</select>
	
</mapper>